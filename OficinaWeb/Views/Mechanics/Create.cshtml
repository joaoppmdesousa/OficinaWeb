@model OficinaWeb.Data.Entities.Mechanic

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Mechanic</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Specialty" class="control-label"></label>
                <input asp-for="Specialty" class="form-control" />
                <span asp-validation-for="Specialty" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProfessionalContact" class="control-label"></label>
                <input asp-for="ProfessionalContact" class="form-control" />
                <span asp-validation-for="ProfessionalContact" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="form-group">
                    <label asp-for="ClockIn" class="control-label"></label>
                    <ejs-timepicker id="clockIn" asp-for="ClockIn"></ejs-timepicker>
                    <span asp-validation-for="ClockIn" class="text-danger"></span>
                </div>
                <span asp-validation-for="ClockIn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ClockOut" class="control-label"></label>
                <ejs-timepicker id="clockOut" asp-for="ClockOut"></ejs-timepicker>
                <span asp-validation-for="ClockOut" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-outline-success" />
                <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

<div>
   
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        
        document.addEventListener('DOMContentLoaded', function () {
            
            if (!document.querySelector('#clockIn').ej2_instances) {
                var timepicker = new ej.calendars.TimePicker({
                    format: 'HH:mm',
                    step: 30,
                    placeholder: 'Select a time',
                    allowEdit: true,
                });
                timepicker.appendTo('#clockIn');
            }
        });

         document.addEventListener('DOMContentLoaded', function () {

            if (!document.querySelector('#clockOut').ej2_instances) {
                var timepicker = new ej.calendars.TimePicker({
                    format: 'HH:mm',
                    step: 30,
                    placeholder: 'Select a time',
                    allowEdit: true,
                });
                timepicker.appendTo('#clockOut');
            }
        });

    </script>
}
